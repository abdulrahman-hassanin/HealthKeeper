/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package research;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author kcsstore.com
 */
public class Medicines extends javax.swing.JFrame {

    /**
     * Creates new form Medicines
     */
    public Medicines() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setSize(450, 550);
        this.setTitle("Main Page");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        medName = new javax.swing.JLabel();
        Dose = new javax.swing.JLabel();
        doseTime = new javax.swing.JLabel();
        doseTF = new javax.swing.JTextField();
        MedTF = new javax.swing.JTextField();
        doseTimeTF = new javax.swing.JTextField();
        AddMedecine = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        medName.setText("Medicine Name");

        Dose.setText("Daily Dose");

        doseTime.setText("Daily Dose Time");

        doseTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doseTFActionPerformed(evt);
            }
        });

        MedTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedTFActionPerformed(evt);
            }
        });

        doseTimeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doseTimeTFActionPerformed(evt);
            }
        });

        AddMedecine.setText("Add Medecine");
        AddMedecine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMedecineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(doseTime, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                                .addComponent(doseTimeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Dose, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(doseTF, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(medName, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(MedTF, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(AddMedecine, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(medName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MedTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(doseTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Dose, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addComponent(doseTimeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(doseTime, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84)
                .addComponent(AddMedecine, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doseTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doseTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doseTFActionPerformed

    private void MedTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MedTFActionPerformed

    private void doseTimeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doseTimeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doseTimeTFActionPerformed

    private void AddMedecineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMedecineActionPerformed
        // TODO add your handling code here:
        String medicineName = MedTF.getText();
        String dailyDose = doseTF.getText();
        String dailyDoseTime = doseTimeTF.getText();

        
        try
        {
            if(medicineName.isEmpty() || dailyDose.isEmpty() || 
                    dailyDoseTime.isEmpty())
                JOptionPane.showMessageDialog(this, "Please fill all data", "ERROR", JOptionPane.ERROR_MESSAGE);

            else{
                String dbHost = "jdbc:derby://localhost:1527/Database";
                String dbUsrname = "ziad";
                String dbPass = "123456";

                Connection myconobj = DriverManager.getConnection(dbHost, dbUsrname, dbPass);

                // check if the medecine has been used before
                String query = "SELECT * FROM MEDICINE WHERE NAME=(?) and user_id = (?)";
                PreparedStatement pstmt = myconobj.prepareStatement(query);
                pstmt.setString(1, medicineName);
                pstmt.setString(2, home.USER_NAME);
                ResultSet rs = pstmt.executeQuery(); 
                if(!(rs.next())) {
                    //  insert into MEDECINE table
                    query = "INSERT INTO MEDICINE VALUES (?, ? , ?, ?)";
                    pstmt = myconobj.prepareStatement(query);
                    pstmt.setString(1, home.USER_NAME);
                    pstmt.setString(2, medicineName);
                    pstmt.setString(3, dailyDose);
                    pstmt.setString(4, dailyDoseTime);
                    pstmt.executeUpdate();
                    
                    //  insert into TAKE table
                    query = "INSERT INTO TAKE VALUES (?, ?)";
                    pstmt = myconobj.prepareStatement(query);
                    pstmt.setString(1, home.USER_NAME);
                    pstmt.setString(2, medicineName);
                    pstmt.executeUpdate();
                }

                
                JOptionPane.showMessageDialog(this,"Medecine added sucessfully!", "Confirm", JOptionPane.INFORMATION_MESSAGE);
                
                // return to home page
                mainpage p2 = new mainpage();
                p2.setVisible(true);
                p2.setTitle("Main Page");
                this.setVisible(false);
            }
        }
        catch(HeadlessException | SQLException e)
        {   
            System.out.println(e.getMessage());            
        }      
        
    }//GEN-LAST:event_AddMedecineActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Medicines().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddMedecine;
    private javax.swing.JLabel Dose;
    private javax.swing.JTextField MedTF;
    private javax.swing.JTextField doseTF;
    private javax.swing.JLabel doseTime;
    private javax.swing.JTextField doseTimeTF;
    private javax.swing.JLabel medName;
    // End of variables declaration//GEN-END:variables
}
